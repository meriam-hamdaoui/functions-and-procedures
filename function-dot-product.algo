ALGORITHM Dot_product
VAR
    V1 : ARRAY_OF FLOAT[];
    V2 : ARRAY_OF FLOAT[];
    n, i, j : INTEGER;
    ps_retour : FLOAT;
BEGIN
    //read elements
    FOR i FROM 1 TO V1.length DO
        Read(V1[i]);
        Read(V2[j]);
    END_FOR 

    IF (V1.length <> V2.length) THEN
        Write("the vectors should have same dimensions");
    ELSE
    //call the function 
        FOR i FROM 1 TO n DO
            ps_retour := dot_product_function(V1,V2);
            IF (ps_retour = 0) THEN
                Write("orthogonal");
            ELSE
                Write("non-orthogonal");
        END_FOR
    END_IF  
END

FUNCTION dot_product_function(VAR T1:ARRAY_OF FLOAT, VAR T2:ARRAY_OF FLOAT) : FLOAT
VAR
    i : INTEGER;
    ps : FLOAT := 0;
BEGIN
    FOR i FROM 1 TO T1.length DO
        ps += T1[i]*T2[i];
    END_FOR
    RETURN ps;
END